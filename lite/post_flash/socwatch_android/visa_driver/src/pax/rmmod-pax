#!/bin/sh

#
# File: rmmod-pax
#
# Description: script to unload PAX driver
#
# Version: 1.4
#
#     Copyright (C) 2009-2012 Intel Corporation.  All Rights Reserved.
# 
#     This file is part of SEP Development Kit
# 
#     SEP Development Kit is free software; you can redistribute it
#     and/or modify it under the terms of the GNU General Public License
#     version 2 as published by the Free Software Foundation.
# 
#     SEP Development Kit is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with SEP Development Kit; if not, write to the Free Software
#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 
#     As a special exception, you may use this file as part of a free software
#     library without restriction.  Specifically, if other files instantiate
#     templates or use macros or inline functions from this file, or you compile
#     this file and link it with other files to produce an executable, this
#     file does not by itself cause the resulting executable to be covered by
#     the GNU General Public License.  This exception does not however
#     invalidate any other reasons why the executable file might be covered by
#     the GNU General Public License.
#

# ------------------------------ CONSTANTS -----------------------------------

DRIVER_NAME=pax
PAX_DRIVER=/dev/pax

# ------------------------------- OUTPUT -------------------------------------

print_msg()
{
  MSG="$*"
  echo "$MSG"
}

print_nnl()
{
  MSG="$*"
  echo -n "$MSG"
}

print_err()
{
  MSG="$*"
  if [ -w /dev/stderr ] ; then
    echo "$MSG" >> /dev/stderr
  else
    echo "$MSG"
  fi
}

# ------------------------------ COMMANDS ------------------------------------

LSMOD="lsmod"
RMMOD="rmmod"
WHICH="which"

# ------------------------------ VARIABLES -----------------------------------

# --------------------------------- MAIN -------------------------------------

# check if a driver is currently loaded ...
ls ${PAX_DRIVER} 
DRIVER_LOADED_SUCC=$?
if [ "${DRIVER_LOADED_SUCC}" != "0" ] ; then
  print_msg "Warning:  no ${DRIVER_NAME} driver was found loaded in the kernel."
  exit 0
fi

# remove any currently loaded driver (should be only one)
if [ "${DRIVER_LOADED_SUCC}" == "0" ] ; then
  print_nnl "Removing ${DRIVER_NAME} driver from the kernel ... "
  sleep 2
  ${RMMOD} ${DRIVER_NAME}
  RMMOD_RESULT=$?
  if [ ${RMMOD_RESULT} -ne 0 ] ; then
    print_err ""
    print_err "Error:  unable to remove ${DRIVER_NAME} driver from the kernel ... exiting."
    print_err ""
    exit 246
  fi
  print_msg "done."
fi

# show which driver was loaded
print_msg "The ${DRIVER_NAME} driver has been successfully unloaded."

exit 0
